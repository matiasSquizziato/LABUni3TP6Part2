/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package labuni3tp6part2;

import java.util.List;

import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.table.DefaultTableModel;
import static labuni3tp6part2.Producto.listaProductos;
import java.util.ArrayList;


/**
 *
 * @author matiSqui
 */
public class InternalGestion extends javax.swing.JInternalFrame {

        private DefaultTableModel modelo = new DefaultTableModel();
        private javax.swing.JTextField txtCodigo;
    /**
     * Creates new form InternalGestion
     */
    public InternalGestion() {
        initComponents();
        cargarJcombos();
        armarCabecera();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jDialog2 = new javax.swing.JDialog();
        jDialog3 = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jcbCategoriasTop = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableList = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jtCodigo = new javax.swing.JTextField();
        jtDescrip = new javax.swing.JTextField();
        jtPrecio = new javax.swing.JTextField();
        jSpinner1 = new javax.swing.JSpinner();
        jcbCategoriasButt = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        btNuevo = new javax.swing.JButton();
        btGuardar = new javax.swing.JButton();
        btActualizar = new javax.swing.JButton();
        btEliminar = new javax.swing.JButton();
        btBuscar = new javax.swing.JButton();
        btCerrar = new javax.swing.JButton();
        jlMensaje = new javax.swing.JLabel();
        jlMensaje1 = new javax.swing.JLabel();
        btFiltrar = new javax.swing.JButton();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog3Layout = new javax.swing.GroupLayout(jDialog3.getContentPane());
        jDialog3.getContentPane().setLayout(jDialog3Layout);
        jDialog3Layout.setHorizontalGroup(
            jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog3Layout.setVerticalGroup(
            jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Gestion de Productos");

        jLabel2.setText("Filtrar por categoria");

        jcbCategoriasTop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbCategoriasTopActionPerformed(evt);
            }
        });

        jTableList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableList);

        jLabel3.setText("Codigo:");

        jLabel4.setText("Descripcion:");

        jLabel5.setText("Precio");

        jLabel6.setText("Rubro");

        jLabel7.setText("Stock");

        btNuevo.setText("Nuevo");
        btNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNuevoActionPerformed(evt);
            }
        });

        btGuardar.setText("Guardar");
        btGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGuardarActionPerformed(evt);
            }
        });

        btActualizar.setText("Actualizar");
        btActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btActualizarActionPerformed(evt);
            }
        });

        btEliminar.setText("Eliminar");
        btEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btEliminarMouseEntered(evt);
            }
        });
        btEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEliminarActionPerformed(evt);
            }
        });

        btBuscar.setText("Buscar");
        btBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btBuscarMouseEntered(evt);
            }
        });
        btBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarActionPerformed(evt);
            }
        });

        btCerrar.setText("Cerrar");
        btCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCerrarActionPerformed(evt);
            }
        });

        jlMensaje1.setText("...");

        btFiltrar.setText("Filtrar");
        btFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFiltrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jLabel2)
                .addGap(51, 51, 51)
                .addComponent(jcbCategoriasTop, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(btFiltrar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(81, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(193, 193, 193))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jlMensaje)
                            .addGap(153, 153, 153))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btCerrar)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btNuevo)
                                    .addGap(31, 31, 31)
                                    .addComponent(btGuardar)
                                    .addGap(50, 50, 50)
                                    .addComponent(btActualizar)
                                    .addGap(85, 85, 85)
                                    .addComponent(btEliminar)))
                            .addGap(106, 106, 106)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4)
                                .addComponent(jLabel5)
                                .addComponent(jLabel6)
                                .addComponent(jLabel7))
                            .addGap(41, 41, 41)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jtPrecio)
                                    .addComponent(jcbCategoriasButt, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jtDescrip, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jtCodigo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(289, 289, 289))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btBuscar, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(43, 43, 43)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jlMensaje1)
                        .addGap(152, 152, 152))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jcbCategoriasTop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btFiltrar)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btBuscar))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtDescrip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jcbCategoriasButt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btCerrar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jlMensaje)
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btNuevo)
                    .addComponent(btGuardar)
                    .addComponent(btActualizar)
                    .addComponent(btEliminar))
                .addGap(48, 48, 48)
                .addComponent(jlMensaje1)
                .addGap(90, 90, 90))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGuardarActionPerformed
        
        if (jtCodigo.getText().trim().isEmpty() || jtDescrip.getText().trim().isEmpty() || jtPrecio.getText().trim().isEmpty()) {
    JOptionPane.showMessageDialog(rootPane, "Los campos no deben estar vacíos.");
    } else {
    try {
        // Validar si el código y el precio son numéricos
        int valCodigo = Integer.parseInt(jtCodigo.getText());
        double valPrecio = Double.parseDouble(jtPrecio.getText());
        String valDescrip = jtDescrip.getText();
        
       // Obtener el objeto Categoria directamente del JComboBox
        Categoria valCategoria = (Categoria) jcbCategoriasButt.getSelectedItem();
        
        // Obtener el valor del JSpinner
        int valCantidad = (int) jSpinner1.getValue();

        // Crear el objeto Producto (supuesto que exista una clase Producto)
        Producto nuevoProducto = new Producto(valCategoria, valCodigo, valDescrip, valPrecio, valCantidad);

        // Agregar el nuevo producto a la lista (supuesto método agregarProducto)
        nuevoProducto.cargarElementos(nuevoProducto);

        DefaultTableModel modeloTabla = (DefaultTableModel) jTableList.getModel();
        Object[] fila = {valCategoria, valCodigo, valDescrip, valPrecio, valCantidad};
        modeloTabla.addRow(fila);
        
        
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(rootPane, "Debe ingresar valores numéricos válidos para el código y precio. Exception: " + e);
        jtCodigo.requestFocus();
    } catch (NullPointerException e) {
        JOptionPane.showMessageDialog(rootPane, "Debe seleccionar una categoría. Exception: " + e);
        jcbCategoriasButt.requestFocus();
    }

    jtCodigo.setText("");
    jtDescrip.setText("");
    jtPrecio.setText("");
    jcbCategoriasButt.setSelectedIndex(0);  
    jSpinner1.setValue(1); 
}

        
        
    }//GEN-LAST:event_btGuardarActionPerformed

    private void btCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCerrarActionPerformed
dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btCerrarActionPerformed

    private void btNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNuevoActionPerformed

        //limpio la table
    modelo.setRowCount(0);
    
    //limpio los campos de texto
    jtCodigo.setText("");
    jtDescrip.setText("");
    jtPrecio.setText("");
    jcbCategoriasButt.setSelectedIndex(0);
    jSpinner1.setValue(0);

    }//GEN-LAST:event_btNuevoActionPerformed

    private void btActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btActualizarActionPerformed

        //al actualizar devuelve toda la lista de productos
            cargarJtableList();

    }//GEN-LAST:event_btActualizarActionPerformed

    private void btEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEliminarActionPerformed
        //eliminar un elemento por el codigo
        

    }//GEN-LAST:event_btEliminarActionPerformed

    private void btEliminarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btEliminarMouseEntered

        jlMensaje1.setText("Para eliminar un elemento debe cargar el codigo");

    }//GEN-LAST:event_btEliminarMouseEntered

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered

        jlMensaje1.setText("...");

    }//GEN-LAST:event_formMouseEntered

    private void btBuscarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btBuscarMouseEntered

        jlMensaje1.setText("Para buscar un elemento debe ingresar el codigo");
        
    }//GEN-LAST:event_btBuscarMouseEntered

    private void btBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarActionPerformed
                   
     try {
        // Verificar si jtCodigo tiene un valor válido
        int codigoBuscado;
        try {
            codigoBuscado = Integer.parseInt(jtCodigo.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Por favor ingresa un número válido.");
            return; // Detener la ejecución si hay error
        }
        
        // Buscar producto en la lista
      Producto productoEncontrado = Producto.buscarProducto(codigoBuscado);
        
        if (productoEncontrado != null) {
            // Limpiar la tabla antes de agregar el nuevo producto (opcional)
            modelo.setRowCount(0);
            mostrarProductoEnTabla(productoEncontrado);
        } else {
            JOptionPane.showMessageDialog(null, "Producto no encontrado");
        }
        
    } catch (Exception e) {
        e.printStackTrace(); // Muestra el error en la consola para depuración
        JOptionPane.showMessageDialog(null, "Ocurrió un error inesperado.");
    }

    }//GEN-LAST:event_btBuscarActionPerformed

    private void jcbCategoriasTopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbCategoriasTopActionPerformed

     filtrarTabla();

    }//GEN-LAST:event_jcbCategoriasTopActionPerformed

    private void btFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFiltrarActionPerformed

        filtrarTabla();
        jTableList.updateUI();

    }//GEN-LAST:event_btFiltrarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btActualizar;
    private javax.swing.JButton btBuscar;
    private javax.swing.JButton btCerrar;
    private javax.swing.JButton btEliminar;
    private javax.swing.JButton btFiltrar;
    private javax.swing.JButton btGuardar;
    private javax.swing.JButton btNuevo;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JDialog jDialog3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTable jTableList;
    private javax.swing.JComboBox<Categoria> jcbCategoriasButt;
    private javax.swing.JComboBox<Categoria> jcbCategoriasTop;
    private javax.swing.JLabel jlMensaje;
    private javax.swing.JLabel jlMensaje1;
    private javax.swing.JTextField jtCodigo;
    private javax.swing.JTextField jtDescrip;
    private javax.swing.JTextField jtPrecio;
    // End of variables declaration//GEN-END:variables

    //Cabecera de la tabla
    private void armarCabecera(){

    modelo.addColumn("Categoria");
    modelo.addColumn("Codigo");
    modelo.addColumn("Descripcion");
    modelo.addColumn("Precio");
    modelo.addColumn("Stock");
    
    jTableList.setModel(modelo);
}
    
    
    //Cargar los jComboBox
    public void cargarJcombos(){
        
        Categoria Limpieza = new Categoria("Limpieza");
        Categoria Comestible = new Categoria("Comestible");
        Categoria Perfumeria = new Categoria("Perfumeria");
        
        //jcbTop
        jcbCategoriasTop.addItem(Limpieza);
        jcbCategoriasTop.addItem(Comestible);
        jcbCategoriasTop.addItem(Perfumeria);
        //jcpButt
        jcbCategoriasButt.addItem(Limpieza);
        jcbCategoriasButt.addItem(Comestible);
        jcbCategoriasButt.addItem(Perfumeria);
        
        
    }


    //cargo la tabla
   public void cargarJtableList() {

       modelo.setRowCount(0);

    for (Producto producto : listaProductos) {
        Object[] fila = {
            producto.getCategoria(),
            producto.getCodigo(),
            producto.getDescrip(),
            producto.getPrecio(),
            producto.getStock()
        };
        modelo.addRow(fila);
    }

    
    jTableList.updateUI();
}
    
    // Muestro el producto filtrado en la tabla
    private void mostrarProductoEnTabla(Producto producto) {
    Object[] fila = {
        producto.getCategoria(), 
        producto.getCodigo(),
        producto.getDescrip(),
        producto.getPrecio(),
        producto.getStock()
    };
    modelo.addRow(fila);
    jTableList.setModel(modelo);
}

// Filtro productos por categoría seleccionada
// Filtro productos por categoría seleccionada
private void filtrarTabla() {
    Categoria valCategoria = (Categoria) jcbCategoriasButt.getSelectedItem();

    ArrayList<Producto> elementosFil = new ArrayList<>();

    // Comparación de categorías utilizando getCategoria()
    for (Producto producto : listaProductos) {
      
        if (producto.getCategoria().getCategoria().equals(valCategoria.getCategoria())) {
            elementosFil.add(producto);  // Si las categorías coinciden, se agrega a la lista
            
        }
    }

    // Cargar la tabla con los productos filtrados
    cargarTablaCate(elementosFil);  
}


// Cargo la tabla con los productos filtrados
private void cargarTablaCate(ArrayList<Producto> elementosFil) {
    modelo.setRowCount(0);  
    for (Producto producto : elementosFil) {  
        Object[] fila = {
            producto.getCategoria().getCategoria(),
            producto.getCodigo(),
            producto.getDescrip(),
            producto.getPrecio(),
            producto.getStock()
        };
        modelo.addRow(fila);
    }
    
    jTableList.updateUI();  // Actualizar la tabla
}

        
}
